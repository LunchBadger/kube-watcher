apiVersion: extensions/v1beta1
kind: Deployment
metadata:
  name: kube-watcher-2
spec:
  replicas: 1
  revisionHistoryLimit: 1
  selector:
  strategy:
    type: Recreate
  template:
    metadata:
      labels:
        run: kube-watcher-2
    spec:
      serviceAccountName: kube-watcher-kubectl-proxy
      containers:
        - name: kube-watcher
          image: 410240865662.dkr.ecr.us-west-2.amazonaws.com/kube-watcher:v2.0.0
          imagePullPolicy: Always
          ports:
            - containerPort: 7788
        - name: kubectl-proxy
          image: 410240865662.dkr.ecr.us-west-2.amazonaws.com/kubectl:1.4.6
          imagePullPolicy: Always
          args: [proxy, --port, "8001", --logtostderr]
---
apiVersion: v1
kind: Service
metadata:
  name: kube-watcher-2
  labels:
    run: kube-watcher-2
spec:
  ports:
    - port: 80
      targetPort: 7788
      protocol: TCP
  selector:
    run: kube-watcher-2
  type: ClusterIP
---
apiVersion: v1
kind: Service
metadata:
  name: kube-watcher
  labels:
    run: kube-watcher
spec:
  ports:
    - port: 80
      targetPort: 7788
      protocol: TCP
  selector:
    run: kube-watcher
  type: ClusterIP
---
apiVersion: extensions/v1beta1
kind: Ingress
metadata:
  name: kube-watcher
spec:
  rules:
  - host: staging-kube-watcher.lunchbadger.com
    http:
      paths:
      - backend:
          serviceName: kube-watcher-2
          servicePort: 80
        path: /v2
      - backend:
          serviceName: kube-watcher
          servicePort: 80

